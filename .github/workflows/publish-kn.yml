name: publish-kn

on:
  workflow_dispatch:
    inputs:
      publish:
        description: 'Publish package (y/n)'
        default: 'n'

jobs:
  prebuild-linuxX64:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Configure
        run: >
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON
          -DZXING_READERS=ON -DZXING_WRITERS=NEW -DZXING_EXPERIMENTAL_API=ON
          -DZXING_BLACKBOX_TESTS=ON -DZXING_UNIT_TESTS=OFF -DZXING_PYTHON_MODULE=OFF -DZXING_C_API=ON

      - name: Build
        run: cmake --build build -j8 --config Release

      - name: Install
        run: |
          cmake -E make_directory install
          cmake --install build --config Release --prefix ${{github.workspace}}/install

      - uses: actions/upload-artifact@v4
        with:
          name: linuxX64-prebuilt-artifacts
          path: install

  publish:
    name: Library Publish
    needs: prebuild-linuxX64

    runs-on: macos-latest # at least macos-13 is required to enable c++20 support

    defaults:
      run:
        working-directory: ./wrappers/kn

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Checkout toolchain initializer repository
        uses: actions/checkout@v4
        with:
          repository: ISNing/kn-toolchain-initializer
          path: wrappers/kn/.kn-toolchain-initializer

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2

      # Download the prebuilt library for passing test for linuxX64 target
      - name: Download prebuilt linuxX64 artifact
        uses: actions/download-artifact@v4
        with:
          name: linuxX64-prebuilt-artifacts
          path: linuxX64-prebuilt-artifacts

      - name: Initialize Kotlin/Native toolchain
        working-directory: wrappers/kn/.kn-toolchain-initializer
        run: ./gradlew build -DkotlinVersion=2.2.0

      - name: Export Toolchain properties
        run: |
          echo -e "konan.dir=$HOME/.konan/kotlin-native-prebuilt-macos-aarch64-2.2.0" >> local.properties
          echo -e "linuxX64.test.compilerOptions=-linker-options, -L${GITHUB_WORKSPACE}/linuxX64-prebuilt-artifacts/lib -lZXing" >> local.properties

      - name: Build Library
        run: |
          export PATH="$PATH:$(brew --prefix llvm@15)/bin"
          ./gradlew assemble

      - name: Run All Library Tests
        run: |
          export PATH="$PATH:$(brew --prefix llvm@15)/bin"
          ./gradlew allTests

      - name: Upload Library Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: allTests-reports
          path: wrappers/kn/build/reports/tests/allTests

      - name: Publish Library
        if: ${{ github.event.inputs.publish == 'y' }}
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
          ORG_GRADLE_PROJECT_ossrhUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_ossrhPassword: ${{ secrets.OSSRH_PASSWORD }}
        run: |
          export PATH="$PATH:$(brew --prefix llvm@15)/bin"
          ./gradlew publishAllPublicationsToSonatypeRepository
